name: Merge Master into Docs Staging

on:
  # Schedule to run twice a week (e.g., Tuesday and Friday at 03:00 UTC)
  # Adjust the cron schedule as needed: https://crontab.guru/
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  # Allow manual triggering from the Actions tab in GitHub
  workflow_dispatch:

# Set permissions for the GITHUB_TOKEN to allow pushing changes
permissions:
  contents: write # Required to push the merge commit
  pull-requests: write

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout docs-staging branch
        uses: actions/checkout@v4
        with:
          ref: docs-staging       # Check out the target branch directly
          token: ${{ secrets.ZOWE_ROBOT_TOKEN }} # Use the default token provided by Actions
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config user.name "Zowe Robot"
          git config user.email "zowe-robot@users.noreply.github.com"

      - name: Ensure docs-staging is up-to-date with remote
        # This step is important in case the checkout wasn't perfectly fresh
        # or if other actions modified the local branch before this job.
        run: git pull origin docs-staging

      - name: Attempt to merge master into docs-staging
        id: merge_attempt # Give step an ID to check outcome later
        run: |
          echo "Attempting direct merge of origin/master into docs-staging..."
          # Try to merge - exit code will be non-zero on conflict
          git merge --signoff origin/master --no-ff --no-edit

        # Allow this step to fail without stopping the job immediately
        continue-on-error: true

      - name: Push changes
        if: steps.merge_attempt.outcome == 'success'
        id: push_staging
        run: |
          
          commit_count=$(git rev-list origin/docs-staging..HEAD --count)
          echo "Commits to push: ${commit_count}"
          if [[ "${commit_count}" -gt 0 ]]; then
            echo "Changes detected that need pushing."
            echo "Pushing merged changes to docs-staging..."
            git push origin docs-staging
          else
            echo "No new commits to push. Local branch is already up-to-date with remote after merge."
          fi
          git checkout reboot/merge-automation
        continue-on-error: true


      - name: Create Pull Request
        id: create_pr # Give this step an ID if you need its outputs later

        uses: ./.github/scripts/open_pr
        with: # Pass inputs to the script via environment variables, prefixed with INPUT_
          github-token: ${{ secrets.ZOWE_ROBOT_TOKEN }}
          conflict-branch: 'master'
          base-branch: 'docs-staging' # Or make dynamic if needed
          pr-title: 'Merge Conflict: master into docs-staging (Automated Attempt)'
          pr-body: |
            Automated attempt to merge `master` into `docs-staging` failed.

          pr-labels: 'automated-pr,merge-conflict'


      - name: Notify failure if PR could not be created
        if: steps.merge_attempt.outcome == 'failure' && steps.setup_conflict_branch.outputs.conflict_branch_created == 'false'
        run: |
          echo "::warning::Merge conflict detected, but no staged changes found after re-attempting merge. No PR created. Manual investigation may be needed."